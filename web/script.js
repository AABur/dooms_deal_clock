// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
const API_BASE_URL = window.location.hostname === 'localhost' 
    ? 'http://localhost:8000/api' 
    : '/api';

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const appState = {
    clockData: {
        time: "23:56:55",
        content: "",
        imageData: null,
        created_at: new Date().toISOString()
    },
    isConnected: false,
    lastFetchTime: null,
    retryCount: 0,
    maxRetries: 3
};

function formatTelegramMessage(content) {
    console.log('Formatting Telegram message:', content);
    
    if (!content) return '';
    
    let formatted = content;
    
    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∑–≤–µ–∑–¥–æ—á–∫–∏ –≤ –Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, **23:56:05)
    formatted = formatted.replace(/^\*\*(\d{2}:\d{2}:\d{2})/m, '$1');
    
    // –í—ã–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –≤ –Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –∂–∏—Ä–Ω–æ–µ –∏ —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã
    formatted = formatted.replace(/^(\d{2}:\d{2}:\d{2}\s+\([^)]+\)\s*\|\s*\d+\s+—Å–µ–∫—É–Ω–¥[–∞—É]?\s+\([^)]+\))\n\n/m, 
        '<div class="time-header"><strong>$1</strong></div>');
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç **—Ç–µ–∫—Å—Ç** –≤ <strong>—Ç–µ–∫—Å—Ç</strong>
    formatted = formatted.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫—É—Ä—Å–∏–≤ *—Ç–µ–∫—Å—Ç* –≤ <em>—Ç–µ–∫—Å—Ç</em> (–Ω–æ –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ **)
    formatted = formatted.replace(/(?<!\*)\*([^*]+?)\*(?!\*)/g, '<em>$1</em>');
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Å—ã–ª–∫–∏ [—Ç–µ–∫—Å—Ç](url) –≤ <a href="url">—Ç–µ–∫—Å—Ç</a>
    formatted = formatted.replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2" target="_blank" rel="noopener">$1</a>');
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —ç–º–æ–¥–∑–∏-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤ —Ü–≤–µ—Ç–Ω—ã–µ –±–ª–æ–∫–∏
    formatted = formatted.replace(/üü°/g, '<span class="emoji-indicator yellow">üü°</span>');
    formatted = formatted.replace(/üü¢/g, '<span class="emoji-indicator green">üü¢</span>');
    formatted = formatted.replace(/üî¥/g, '<span class="emoji-indicator red">üî¥</span>');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑—Ä—ã–≤—ã —Å—Ç—Ä–æ–∫
    formatted = formatted.replace(/\n/g, '<br>');
    
    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∑–≤–µ–∑–¥–æ—á–∫–∏ –≤ –∫–æ–Ω—Ü–µ –ø–µ—Ä–µ–¥ "–î—Ä—É–≥–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"
    formatted = formatted.replace(/\*\*<br>–î—Ä—É–≥–∏–µ –Ω–æ–≤–æ—Å—Ç–∏/g, '<br>–î—Ä—É–≥–∏–µ –Ω–æ–≤–æ—Å—Ç–∏');
    
    console.log('Formatted message:', formatted);
    return formatted;
}

function updateClock() {
    console.log('Updating display with data:', {
        hasImage: !!appState.clockData.imageData,
        hasContent: !!appState.clockData.content
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const messageContent = document.getElementById('messageContent');
    if (messageContent) {
        if (appState.clockData.content) {
            messageContent.innerHTML = formatTelegramMessage(appState.clockData.content);
        } else {
            messageContent.textContent = appState.isConnected ? 
                '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' : 
                '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É';
        }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const clockImage = document.getElementById('clockImage');
    const noImageMessage = document.getElementById('noImageMessage');
    
    if (appState.clockData.imageData) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ Telegram –∫–∞–Ω–∞–ª–∞
        clockImage.src = `data:image/jpeg;base64,${appState.clockData.imageData}`;
        clockImage.style.display = 'block';
        noImageMessage.style.display = 'none';
        console.log('Displayed image from Telegram');
    } else {
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        clockImage.style.display = 'none';
        noImageMessage.style.display = 'block';
        noImageMessage.textContent = appState.isConnected ? 
            '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏' : 
            '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É';
    }
    
    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    const contentLayout = document.querySelector('.content-layout');
    if (contentLayout) {
        contentLayout.style.opacity = appState.isConnected ? '1' : '0.7';
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
async function fetchClockData() {
    try {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞...');
        
        const response = await fetch(`${API_BASE_URL}/clock/latest`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
            signal: AbortSignal.timeout(10000)
        });
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        appState.clockData.time = data.time || "23:56";
        appState.clockData.content = data.content || "";
        appState.clockData.imageData = data.image_data;
        appState.clockData.created_at = data.created_at;
        
        console.log('Updated app state:', appState.clockData);
        
        appState.isConnected = true;
        appState.lastFetchTime = new Date();
        appState.retryCount = 0;
        
        console.log('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', data);
        updateClock();
        
        return data;
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        appState.isConnected = false;
        appState.retryCount++;
        
        updateClock();
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
async function checkServerStatus() {
    try {
        const response = await fetch(`${API_BASE_URL}/health`, {
            method: 'GET',
            signal: AbortSignal.timeout(5000)
        });
        
        if (response.ok) {
            const status = await response.json();
            console.log('–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞:', status);
            return status;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
    }
    
    return null;
}

// –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
async function autoUpdate() {
    try {
        await fetchClockData();
    } catch (error) {
        if (appState.retryCount < appState.maxRetries) {
            console.log(`–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${appState.retryCount}/${appState.maxRetries} —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...`);
            setTimeout(autoUpdate, 5000);
        } else {
            console.error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async function() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É
    updateClock();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
    const serverStatus = await checkServerStatus();
    if (serverStatus) {
        console.log('–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        await autoUpdate();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã
        setInterval(autoUpdate, 120000);
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        setInterval(checkServerStatus, 30000);
    } else {
        console.warn('–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ–º –≤ –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ');
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
window.fetchClockData = fetchClockData;
window.checkServerStatus = checkServerStatus;
window.updateClock = updateClock;